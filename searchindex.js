Search.setIndex({"alltitles": {"Code Generation": [[0, null]], "Installation": [[10, null]], "Meta-Operations": [[13, "meta-operations"]], "NineToothed Documentation": [[9, null]], "Python API": [[11, null]], "Symbol": [[12, null]], "Tensor": [[13, null]], "ninetoothed.Tensor.expand": [[1, null]], "ninetoothed.Tensor.flatten": [[2, null]], "ninetoothed.Tensor.permute": [[3, null]], "ninetoothed.Tensor.ravel": [[4, null]], "ninetoothed.Tensor.squeeze": [[5, null]], "ninetoothed.Tensor.tile": [[6, null]], "ninetoothed.jit": [[7, null]], "ninetoothed.make": [[8, null]]}, "docnames": ["code_generation", "generated/ninetoothed.Tensor.expand", "generated/ninetoothed.Tensor.flatten", "generated/ninetoothed.Tensor.permute", "generated/ninetoothed.Tensor.ravel", "generated/ninetoothed.Tensor.squeeze", "generated/ninetoothed.Tensor.tile", "generated/ninetoothed.jit", "generated/ninetoothed.make", "index", "installation", "python_api", "symbol", "tensor"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["code_generation.rst", "generated/ninetoothed.Tensor.expand.rst", "generated/ninetoothed.Tensor.flatten.rst", "generated/ninetoothed.Tensor.permute.rst", "generated/ninetoothed.Tensor.ravel.rst", "generated/ninetoothed.Tensor.squeeze.rst", "generated/ninetoothed.Tensor.tile.rst", "generated/ninetoothed.jit.rst", "generated/ninetoothed.make.rst", "index.rst", "installation.rst", "python_api.rst", "symbol.rst", "tensor.rst"], "indexentries": {"expand() (ninetoothed.tensor method)": [[1, "ninetoothed.Tensor.expand", false]], "flatten() (ninetoothed.tensor method)": [[2, "ninetoothed.Tensor.flatten", false]], "jit() (in module ninetoothed)": [[7, "ninetoothed.jit", false]], "make() (in module ninetoothed)": [[8, "ninetoothed.make", false]], "permute() (ninetoothed.tensor method)": [[3, "ninetoothed.Tensor.permute", false]], "ravel() (ninetoothed.tensor method)": [[4, "ninetoothed.Tensor.ravel", false]], "squeeze() (ninetoothed.tensor method)": [[5, "ninetoothed.Tensor.squeeze", false]], "symbol (class in ninetoothed)": [[12, "ninetoothed.Symbol", false]], "tensor (class in ninetoothed)": [[13, "ninetoothed.Tensor", false]], "tile() (ninetoothed.tensor method)": [[6, "ninetoothed.Tensor.tile", false]]}, "objects": {"ninetoothed": [[12, 0, 1, "", "Symbol"], [13, 0, 1, "", "Tensor"], [7, 2, 1, "", "jit"], [8, 2, 1, "", "make"]], "ninetoothed.Tensor": [[1, 1, 1, "", "expand"], [2, 1, 1, "", "flatten"], [3, 1, 1, "", "permute"], [4, 1, 1, "", "ravel"], [5, 1, 1, "", "squeeze"], [6, 1, 1, "", "tile"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "terms": {"": [4, 5], "A": [6, 7, 8, 12, 13], "For": [4, 13], "It": 10, "The": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13], "To": 10, "_prettifi": 7, "abstract": 9, "access": 9, "activ": 9, "after": [2, 4], "also": 10, "api": 9, "appli": 4, "applic": 8, "ar": 13, "arithmet": 9, "arrang": 8, "base": 9, "between": [2, 6], "bound": 13, "break": 7, "c": 4, "can": 10, "capabl": 10, "class": [12, 13], "code": [7, 9, 11], "compat": 10, "compil": 7, "comput": [7, 8, 9], "consid": [4, 10], "constexpr": [12, 13], "constexpr_shap": 13, "construct": 12, "current": 10, "decor": 7, "deep": 10, "detail": 9, "develop": 9, "differ": [2, 4], "dilat": 6, "dim": [3, 5], "dimens": [1, 2, 3, 4, 5, 13], "document": 10, "domain": 9, "dsl": 9, "dtype": 13, "each": 6, "element": 13, "empow": 9, "end_dim": 2, "environ": 10, "exampl": 4, "experiment": 7, "expr": 12, "express": 12, "fals": 7, "find": 10, "first": [2, 4], "flatten": 4, "framework": 10, "from": 4, "fulli": 10, "func": 7, "function": 7, "gener": [6, 7, 9, 10, 11], "good": 10, "ha": 4, "handl": [7, 8], "have": 4, "help": 10, "hierarch": 6, "hierarchi": 4, "high": 9, "higher": 9, "i": [6, 7, 9, 10, 12], "instal": 9, "integr": 8, "intern": 13, "interv": 6, "intuit": 9, "its": [9, 10], "kernel": [7, 8, 9], "languag": 9, "last": 2, "learn": 10, "level": [4, 9], "leverag": 10, "like": 9, "low": 9, "mai": 10, "manag": 9, "mata": 12, "memori": 9, "meta": 12, "metaprogram": 9, "might": 7, "model": 9, "n": 4, "name": 13, "ndim": 13, "need": [9, 10], "ninetooth": [10, 12, 13], "none": [2, 6, 7, 12, 13], "number": 13, "offer": 9, "onli": [4, 13], "option": 10, "order": 3, "orient": 9, "other": 13, "out": 13, "p": 4, "packag": 10, "paramet": [1, 2, 3, 5, 6, 7, 8, 12, 13], "perform": 9, "pip": 10, "pointer": 9, "posit": 13, "practic": 10, "prettifi": 7, "project": 9, "python": 9, "pytorch": 10, "q": 4, "r": 4, "ravel": 2, "remov": 5, "repres": [12, 13], "result": 4, "return": [1, 2, 3, 4, 5, 6, 7, 8], "second": 4, "see": 2, "shape": [1, 4, 6, 13], "singl": 4, "singleton": [1, 5], "size": 13, "sourc": 13, "source_dim": 13, "space": 6, "specif": 9, "specifi": [1, 2, 5], "start_dim": 2, "stride": [6, 13], "support": 10, "symbol": [9, 11, 13], "target": 13, "target_dim": 13, "tensor": [8, 9, 11], "thi": [9, 10], "though": 10, "through": 9, "tile_shap": 6, "tom": 9, "triton": 9, "two": 4, "type": 13, "ues": [12, 13], "under": 9, "us": [10, 12, 13], "valu": 13, "virtual": 10, "when": 10, "whether": [7, 12, 13], "which": [4, 6, 7], "without": 9, "write": 9, "you": 10}, "titles": ["Code Generation", "ninetoothed.Tensor.expand", "ninetoothed.Tensor.flatten", "ninetoothed.Tensor.permute", "ninetoothed.Tensor.ravel", "ninetoothed.Tensor.squeeze", "ninetoothed.Tensor.tile", "ninetoothed.jit", "ninetoothed.make", "NineToothed Documentation", "Installation", "Python API", "Symbol", "Tensor"], "titleterms": {"api": 11, "code": 0, "document": 9, "expand": 1, "flatten": 2, "gener": 0, "instal": 10, "jit": 7, "make": 8, "meta": 13, "ninetooth": [1, 2, 3, 4, 5, 6, 7, 8, 9], "oper": 13, "permut": 3, "python": 11, "ravel": 4, "squeez": 5, "symbol": 12, "tensor": [1, 2, 3, 4, 5, 6, 13], "tile": 6}})